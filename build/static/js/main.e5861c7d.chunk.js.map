{"version":3,"sources":["components/Header.js","config/axios.js","actions/productoActions.js","types/index.js","components/Producto.js","components/Productos.js","actions/alertaActions.js","components/NuevoProducto.js","components/EditarProducto.js","reducers/productosReducer.js","reducers/alertaReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","clienteAxios","axios","create","baseURL","agregarProducto","type","payload","agregarProductoExito","producto","agregarProductoError","estado","descargarProductosAction","mostrarProductoExito","productos","mostrarProductoError","eliminarProductosAction","id","eliminarProductoExito","eliminarProductoError","obtenerProductoAction","edicionProducto","edicionProductoExito","edicionProductoError","Productos","nombre","precio","dispatch","useDispatch","history","useHistory","confirmarEliminar","Swal","fire","title","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","a","delete","borrarProductoAction","redireccionEdicion","push","obtenerProductoEditar","onClick","useEffect","get","respuesta","data","useSelector","state","error","cargando","loading","scope","length","map","Producto","key","mostrarAlertaError","alerta","ocultarAlertaError","NuevoProducto","useState","guardarNombre","guardarPrecio","addNewProduct","post","icon","createNewProduct","classes","msg","onSubmit","e","preventDefault","trim","mostrarAlerta","ocultarAlerta","name","onChange","target","placeholder","Number","EditarProducto","guardarProducto","productoEditar","onChangeFormulario","put","comenzarEdicionProducto","initialState","productoEliminar","combineReducers","action","filter","store","createStore","reducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.e5861c7d.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n    return ( \n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary justify-content-between\">\n            <div className=\"container\">\n                <h1> <Link to={'/'} className=\"text-light\">CRUD React REDUX Rest API axios</Link></h1>\n                <Link to={'/productos/nuevo'} className=\"btn btn-danger nuevo-post d-block d-md-inline-block\">Nuevo Producto &#43;</Link>\n            </div>\n        </nav>\n     );\n}\n \nexport default Header;","import axios from 'axios';\n\nconst clienteAxios =  axios.create({\n    baseURL : 'http://localhost:4000/'\n});\n\nexport default clienteAxios;","import {\n    AGREGAR_PRODUCTO,\n    AGREGAR_PRODUCTO_EXITO,\n    AGREGAR_PRODUCTO_ERROR,\n    COMENZAR_DESCARGA_PRODUCTO,\n    DESCARGA_PRODUCTO_EXITO,\n    DESCARGA_PRODUCTO_ERROR,\n    ELIMINAR_PRODUCTO,\n    ELIMINAR_PRODUCTO_EXITO,\n    ELIMINAR_PRODUCTO_ERROR,\n    EDITAR_PRODUCTO,\n    COMENZAR_EDITAR_PRODUCTO,\n    EDITAR_PRODUCTO_EXITO,\n    EDITAR_PRODUCTO_ERROR\n} from '../types';\n\nimport clienteAxios from '../config/axios';\n\nimport Swal from 'sweetalert2'\n\n//crear nuevos productos\nexport function createNewProduct(producto) {\n\n    \n    return  async (dispatch) => {\n        dispatch( agregarProducto() );\n        try {\n            \n            await clienteAxios.post('/productos', producto);\n            \n            dispatch( agregarProductoExito(producto) );\n            \n            Swal.fire({\n                title: 'Correcto!',\n                text: 'Se ingreso con exito el producto',\n                icon: 'success',\n                confirmButtonText: 'Aceptar'\n              })\n\n        } catch (error) {\n\n            dispatch( agregarProductoError(null) )\n\n            Swal.fire({\n                title: 'Error!',\n                text: 'Se a producido un Éxito',\n                icon: 'error',\n                confirmButtonText: 'Aceptar'\n              })\n        }\n    }\n}\n\nconst agregarProducto = () => ({\n    type : AGREGAR_PRODUCTO,\n    payload : true\n})\n\nconst agregarProductoExito = producto => ({\n    type : AGREGAR_PRODUCTO_EXITO,\n    payload : producto\n});\n\nconst agregarProductoError = estado => ({\n    type : AGREGAR_PRODUCTO_ERROR,\n    payload : estado\n});\n\n\n//FUNCION QUE DESCARGA LOS PRODUCTOS DE LA BASE DE DATOS\nexport function mostrarProductoAction() {\n    return async (dispatch) => {\n        dispatch( descargarProductosAction() );\n\n        try {\n            const respuesta = await clienteAxios.get('/productos');\n            dispatch( mostrarProductoExito(respuesta.data) );\n\n        } catch (error) {\n            dispatch( mostrarProductoError() )\n        }\n    }\n}\n\nconst descargarProductosAction = () => ({\n    type : COMENZAR_DESCARGA_PRODUCTO,\n    payload : true\n});\n\nconst mostrarProductoExito = productos => ({\n    type : DESCARGA_PRODUCTO_EXITO,\n    payload : productos\n});\n\nconst mostrarProductoError = () => ({\n    type : DESCARGA_PRODUCTO_ERROR,\n    payload : true\n});\n\n//slecciona y elimina el producto\nexport function borrarProductoAction(id) {\n    return async (dispatch) => {\n        dispatch( eliminarProductosAction(id) );\n        \n        try {\n\n            await clienteAxios.delete(`/productos/${id}`);\n            dispatch( eliminarProductoExito() );\n\n        } catch (error) {\n            dispatch( eliminarProductoError() )\n        }\n    }\n}\nconst eliminarProductosAction = id => ({\n    type : ELIMINAR_PRODUCTO,\n    payload : id\n});\n\nconst eliminarProductoExito = () => ({\n    type : ELIMINAR_PRODUCTO_EXITO\n});\n\nconst eliminarProductoError = () => ({\n    type : ELIMINAR_PRODUCTO_ERROR,\n    payload : true\n});\n\n\n//colocar producto en edicion\nexport function obtenerProductoEditar(producto){\n    return (dispatch) => {\n        dispatch( obtenerProductoAction(producto) )\n    }\n}\n\nconst obtenerProductoAction = producto => ({\n    type : EDITAR_PRODUCTO,\n    payload : producto\n})\n\nexport function comenzarEdicionProducto(producto){\n    return async (dispatch) => {\n        dispatch( edicionProducto() );\n\n        try {\n            clienteAxios.put(`/productos/${producto.id}`, producto);\n            dispatch( edicionProductoExito(producto) );\n\n        } catch (error) {\n            dispatch( edicionProductoError() )\n        }\n    }\n}\n\nconst edicionProducto = () => ({\n    type : COMENZAR_EDITAR_PRODUCTO\n})\n\nconst edicionProductoExito = producto => ({\n    type : EDITAR_PRODUCTO_EXITO,\n    payload : producto\n})\n\nconst edicionProductoError = () => ({\n    type : EDITAR_PRODUCTO_ERROR,\n    payload : true\n})","export const AGREGAR_PRODUCTO = 'AGREGAR_PRODUCTO'; \nexport const AGREGAR_PRODUCTO_EXITO = 'AGREGAR_PRODUCTO_EXITO'; \nexport const AGREGAR_PRODUCTO_ERROR = 'AGREGAR_PRODUCTO_ERROR'; \n\nexport const COMENZAR_DESCARGA_PRODUCTO = 'COMENZAR_DESCARGA_PRODUCTO'; \nexport const DESCARGA_PRODUCTO_EXITO = 'DESCARGA_PRODUCTO_EXITO'; \nexport const DESCARGA_PRODUCTO_ERROR = 'DESCARGA_PRODUCTO_ERROR'; \n\nexport const EDITAR_PRODUCTO = 'EDITAR_PRODUCTO'; \nexport const COMENZAR_EDITAR_PRODUCTO = 'COMENZAR_EDITAR_PRODUCTO'; \nexport const EDITAR_PRODUCTO_EXITO = 'EDITAR_PRODUCTO_EXITO'; \nexport const EDITAR_PRODUCTO_ERROR = 'EDITAR_PRODUCTO_ERROR'; \n\nexport const ELIMINAR_PRODUCTO = 'ELIMINAR_PRODUCTO'; \nexport const ELIMINAR_PRODUCTO_EXITO = 'ELIMINAR_PRODUCTO_EXITO'; \nexport const ELIMINAR_PRODUCTO_ERROR = 'ELIMINAR_PRODUCTO_ERROR'; \n\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA'; \nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA'; ","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Swal from 'sweetalert2'\n\n//redux\nimport { useDispatch } from 'react-redux';\nimport { borrarProductoAction, obtenerProductoEditar } from '../actions/productoActions';\n\nconst Productos = ({producto}) => {\n\n    const { nombre, precio, id } = producto;\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    //confirmar si deea eliminar producto\n    const confirmarEliminar = id => {\n        \n        Swal.fire({\n            title: 'Esta seguro?',\n            text: \"luego no puede modificar los datos!\",\n            type: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#78C2AD',\n            cancelButtonColor: '#ff5a2b',\n            confirmButtonText: 'Si, deseo Eliminar.'\n          \n          }).then((result) => {\n              if (result.value) { \n                dispatch( borrarProductoAction(id) );\n                }\n          })\n    }\n\n    // funcion que redirige de forma programada\n    const redireccionEdicion = producto => {\n        history.push(`/productos/editar/${producto.id}`);\n        dispatch( obtenerProductoEditar(producto) );\n    }\n\n\n    return ( \n    <tr>\n        <td>{nombre}</td>\n        <td><span className=\"font-weight-bold\"> $ {precio}</span></td>\n        <td className=\"acciones\">\n            <button \n                type=\"button\" \n                className=\"btn btn-primary mr-2\"\n                onClick={ () => redireccionEdicion(producto) }    \n            >\n                Editar\n            </button>\n            <button \n                type=\"button\"\n                className=\"btn btn-danger\"\n                onClick={ () => confirmarEliminar(id)} >\n                Eliminar\n            </button>\n        </td>\n    </tr>\n     );\n}\n \nexport default Productos;","import React, {Fragment, useEffect} from 'react';\nimport Producto from  '../components/Producto';\n\n//actions de redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { mostrarProductoAction } from '../actions/productoActions';\n\nconst Productos = () => {\n\n    //useDispatch te crea una funcion\n    const dispatch = useDispatch();\n\n    useEffect(()=> {\n\n        //mandar a llamar el action de producto action\n        const llamarProductos = () => dispatch( mostrarProductoAction() ); \n        llamarProductos();\n\n    }, [dispatch]);\n\n    const productos = useSelector( state => state.productos.productos );\n    const error = useSelector( state => state.productos.error );\n    const cargando = useSelector( state => state.productos.loading );\n    \n    return ( \n        <Fragment>\n            <h2 className=\"text-center my-5\">Listado de Productos</h2>\n\n            { error ? <p className=\"font-weight-bold alert alert-danger text-center mt-4\">Hubo un Error</p> : null}\n            { cargando ? <p>cargando... !</p> : null}\n\n            <table className=\"table table-striped text-center\">\n                <thead className=\"bg-primary table-dark\">\n                    <tr>\n                        <th scope=\"col\">Nombre</th>\n                        <th scope=\"col\">Precio</th>\n                        <th scope=\"col\">Acción</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {productos.length  === 0 ? 'No hay roductos' : (\n                        productos.map(producto => (\n                            <Producto \n                                key={producto.id}\n                                producto={producto}\n                            />\n                        ))\n                    ) }\n                </tbody>\n            </table>\n        </Fragment>\n     );\n}\n \nexport default Productos;","import {\n    MOSTRAR_ALERTA,\n    OCULTAR_ALERTA\n} from '../types';\n\n//muestra una alerta\nexport function mostrarAlerta(alerta) {\n    return (dispatch) => {\n        dispatch( mostrarAlertaError(alerta) )\n    }\n}\n\nconst mostrarAlertaError = alerta => ({\n    type : MOSTRAR_ALERTA,\n    payload: alerta\n})\n\n//muestra una alerta\nexport function ocultarAlerta(alerta) {\n    return (dispatch) => {\n        dispatch( ocultarAlertaError(alerta) )\n    }\n}\n\nconst ocultarAlertaError = alerta => ({\n    type : OCULTAR_ALERTA,\n    payload: alerta\n})","import React, {useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n//actions de redux\nimport { createNewProduct } from '../actions/productoActions';\nimport { mostrarAlerta, ocultarAlerta } from '../actions/alertaActions';\n\n// history es el acceso a todas las varialbles de router para direccionar\nconst NuevoProducto = ({history}) => {\n\n    //useDispatch te crea una funcion\n    const dispatch = useDispatch();\n\n    //acceder al state del store\n    const error = useSelector( state => state.productos.error );\n    const alerta = useSelector( state => state.alerta.alerta );\n    \n    \n\n    const [nombre, guardarNombre ] = useState('');\n    const [precio, guardarPrecio ] = useState(0);\n\n    //mandar a llamar el action de producto action\n    const addNewProduct = producto => dispatch( createNewProduct(producto) ); \n\n    const submitNewProduct = e => {\n        e.preventDefault();\n\n        //validar\n        if(nombre.trim() === '' || precio <= 0) {\n            const respuesta = {\n                msg : 'ambos campos son obligatorios',\n                classes : 'alert alert-danger text-center text-uppercase p3'\n            }\n            dispatch(mostrarAlerta(respuesta) );\n            return;\n        }\n        dispatch(ocultarAlerta(null) );\n        //enviar producto\n        addNewProduct({\n            nombre,\n            precio\n        })\n\n        history.push('/');\n\n    }\n\n    return ( \n        <div className=\"row justify-content-center\">\n            <div className=\"col-md-8\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h2 className=\"text-center mb-4 font-weight-bold\">\n                            Agregar Nuevo Producto\n                        </h2>\n\n                        { alerta ? <p className={alerta.classes} >{alerta.msg}</p> : null  }\n                        <form\n                            onSubmit={ submitNewProduct }\n                        >\n                            <div className=\"form-group\">\n                                <label>Nombre Producto</label>\n                                <input \n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name={nombre}\n                                    onChange={ e => guardarNombre(e.target.value)}\n                                    placeholder=\"Computadora\"\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Precio Producto</label>\n                                <input \n                                    type=\"number\"\n                                    className=\"form-control\"\n                                    name={precio}\n                                    onChange={ e => guardarPrecio( Number(e.target.value) )}\n                                    placeholder=\"23000\"\n                                />\n                            </div>\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\"\n                            >Agregar</button>\n                        </form>\n                        { error ? <p className=\"alert alert-danger p2 mt-4 text-center\" >Hubo un error</p> : null  }\n                    </div>\n                </div>\n            </div>\n        </div>\n     );\n}\n \nexport default NuevoProducto;","import React, { useState, useEffect } from 'react';\n\n//actions de redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { comenzarEdicionProducto } from '../actions/productoActions'\nimport { useHistory } from 'react-router-dom';\n\nimport Swal from 'sweetalert2'\n\nconst EditarProducto = () => {\n\n    const history = useHistory();\n\n    //nuevo  state de productos\n    const [ producto, guardarProducto ] = useState({\n        nombre : '',\n        precio : ''\n    })\n\n    //useDispatch te crea una funcion\n    const dispatch = useDispatch();\n\n    const productoEditar = useSelector( state => state.productos.productoEditar );\n\n    useEffect(() => {\n\n        if(!productoEditar) return null;\n\n        guardarProducto(productoEditar)\n\n    },[productoEditar]);\n\n    const onChangeFormulario = e => {\n        guardarProducto({\n            ...producto,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const { nombre, precio } = producto;\n\n    const actualizarProducto = e => {\n        e.preventDefault();\n        Swal.fire(\n            'Buen Trabajo!',\n            'Producto Editado con Exito!',\n            'success'\n          )\n        dispatch( comenzarEdicionProducto(producto) );\n        history.push('/');\n    }\n    \n    return ( \n        <div className=\"row justify-content-center\">\n            <div className=\"col-md-8\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h2 className=\"text-center mb-4 font-weight-bold\">\n                            Editar Producto\n                        </h2>\n                        <form\n                            onSubmit={ actualizarProducto }\n                        >\n                            <div className=\"form-group\">\n                                <label>Nombre Producto</label>\n                                <input \n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"nombre\"\n                                    value={nombre}\n                                    onChange={onChangeFormulario}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Precio Producto</label>\n                                <input \n                                    type=\"number\"\n                                    className=\"form-control\"\n                                    name=\"precio\"\n                                    value={precio}\n                                    onChange={onChangeFormulario}\n                                />\n                            </div>\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\"\n                            >Guardar Cambios</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n        );\n}\n \nexport default EditarProducto;","//IMPORTANDO LOS TYPES\nimport {\n    AGREGAR_PRODUCTO,\n    AGREGAR_PRODUCTO_EXITO,\n    AGREGAR_PRODUCTO_ERROR,\n    COMENZAR_DESCARGA_PRODUCTO,\n    DESCARGA_PRODUCTO_EXITO,\n    DESCARGA_PRODUCTO_ERROR,\n    ELIMINAR_PRODUCTO,\n    ELIMINAR_PRODUCTO_EXITO,\n    ELIMINAR_PRODUCTO_ERROR,\n    EDITAR_PRODUCTO,\n    EDITAR_PRODUCTO_EXITO,\n    EDITAR_PRODUCTO_ERROR\n} from '../types';\n\n\n// cada reducers tiene su propio state\nconst initialState = {\n    productos : [],\n    error : null,\n    loading: false,\n    productoEliminar : null,\n    productoEditar : null\n}\n\nexport default function( state = initialState, action) {\n    switch (action.type) {\n        case AGREGAR_PRODUCTO: \n        case COMENZAR_DESCARGA_PRODUCTO:\n            return {\n                ...state,\n                loading : action.payload\n            }\n        case AGREGAR_PRODUCTO_EXITO:\n            return {\n                ...state,\n                loading : false,\n                productos : [ ...state.productos, action.payload ]\n            }\n        case AGREGAR_PRODUCTO_ERROR:\n        case DESCARGA_PRODUCTO_ERROR:\n        case ELIMINAR_PRODUCTO_ERROR:\n        case EDITAR_PRODUCTO_ERROR:\n            return {\n                ...state,\n                loading : false,\n                error : action.payload\n            }\n        case DESCARGA_PRODUCTO_EXITO:\n            return {\n                ...state,\n                loading : false,\n                error : null,\n                productos : action.payload\n            }\n        case ELIMINAR_PRODUCTO:\n            return {\n                ...state,\n                productoEliminar : action.payload\n            }\n        case ELIMINAR_PRODUCTO_EXITO:\n            return {\n                ...state,\n                productos: state.productos.filter( producto => producto.id !== state.productoEliminar ),\n                productoEliminar : null\n            }\n        case EDITAR_PRODUCTO:\n            return {\n                ...state,\n                productoEditar : action.payload\n            }\n        case EDITAR_PRODUCTO_EXITO:\n            return {\n                ...state,\n                productoEditar : null,\n                productos : state.productos.map( producto => \n                    producto.id === action.payload.id ? producto = action.payload : producto\n                )\n            }\n        default:\n            return state;\n    }\n}","import {\n    MOSTRAR_ALERTA,\n    OCULTAR_ALERTA\n} from '../types';\n\nconst initialState = {\n    alerta : null\n}\n\nexport default function( state = initialState, action) {\n    switch (action.type) {\n        case MOSTRAR_ALERTA:\n        case OCULTAR_ALERTA:\n            return {\n                ...state,\n                alerta : action.payload\n            }\n        \n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport productosReducer from './productosReducer';\nimport alertaReducer from './alertaReducer';\n\nexport default combineReducers({\n    productos : productosReducer,\n    alerta : alertaReducer\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst store = createStore(\n    reducer, \n    compose( \n        applyMiddleware(thunk),\n            typeof window === 'object' && \n                typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? \n                    window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\n    )\n);\n\nexport default store;","import React from 'react';\nimport Header from './components/Header';\nimport Productos from './components/Productos';\nimport NuevoProducto from './components/NuevoProducto';\nimport EditarProducto from './components/EditarProducto';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n//redux desde aca\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nfunction App() {\n  return (\n    <Router>\n      <Provider store={store}>\n        <Header />\n        <div className=\"container mt-5\">\n          <Switch>\n            <Route exact path=\"/\" component={Productos}/>\n            <Route exact path=\"/productos/nuevo\" component={NuevoProducto}/>\n            <Route exact path=\"/productos/editar/:id\" component={EditarProducto}/>\n          </Switch>\n        </div>\n      </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}